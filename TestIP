const ModbusRTU = require("modbus-serial");

// Configuration du client
const client = new ModbusRTU();
const AUTOMATE_IP = "172.16.1.24"; // Adresse IP de l'automate
const AUTOMATE_PORT = 502;         // Port Modbus (par défaut : 502)
const MODBUS_ADDRESS = 601;        // Adresse de la variable à interroger (%M602)
const INTERVAL = 500;              // Intervalle en ms pour la mise à jour (0.5 seconde)

// Fonction pour lire la variable et l'afficher
async function readVariable() {
    try {
        const data = await client.readCoils(MODBUS_ADDRESS, 1);
        const value = data.data[0] ? 1 : 0; // Convertir la valeur en 0 ou 1
        console.log(`Valeur actuelle de la variable %M${MODBUS_ADDRESS}: ${value}`);
    } catch (err) {
        console.error("Erreur lors de la lecture de l'automate:", err.message);
    }
}

// Connexion au serveur Modbus et démarrage de la boucle
async function start() {
    try {
        await client.connectTCP(AUTOMATE_IP, { port: AUTOMATE_PORT });
        console.log("Connecté à l'automate");

        // Lire la variable toutes les 500 ms
        setInterval(readVariable, INTERVAL);
    } catch (err) {
        console.error("Erreur de connexion à l'automate:", err.message);
    }
}

// Fermer la connexion proprement lorsqu'on arrête le programme
process.on("SIGINT", () => {
    console.log("Fermeture du programme...");
    client.close(() => {
        console.log("Connexion au Modbus fermée");
        process.exit();
    });
});

// Démarrer le programme
start();
